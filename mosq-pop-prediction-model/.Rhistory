AIC(fit)
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
coef(fit)
coef(fit)[1]
phi2 <- coef(fit)[1]*exp(-((temp-coef(fit)[2])^2)/coef(fit)[3])
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
lines(df$temp, phi2, "l")
phi2 <- coef(fit)[1]*exp(-((temp-coef(fit)[2])^2)/coef(fit)[3], ylim = c(0, 0.5))
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
lines(df$temp, phi2, "l")
phi2 <- coef(fit)[1]*exp(-((temp-coef(fit)[2])^2)/coef(fit)[3])
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, , ylim = c(0, 0.5))
lines(df$temp, phi2, "l")
# Estimating the parameters with MLE of the function alpha*exp(-(temp-beta1)^2/beta2)
temp <- df$temp
LL <- function(alpha, beta1, beta2, mu, sigma) {
R = df$gen.cycle - alpha*exp(-((temp-beta1)^2)/beta2)
#
R = suppressWarnings(dnorm(R, mu, sigma, log = TRUE))
#
-sum(R)
}
library(bbmle)
fit <- mle2(LL, start = list(alpha = 0.3, beta1 = 34, beta2 = 100, mu = 0, sigma = 1))
summary(fit)
AIC(fit)
phi2 <- coef(fit)[1]*exp(-((temp-coef(fit)[2])^2)/coef(fit)[3])
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, , ylim = c(0, 0.5))
lines(df$temp, phi2, "l")
lines(df$temp, phi, col = "red")
AIC(fit)
AIC(model1)
AIC(model1)
AIC(model2)
BIC(model1)
BIC(model2)
#Clear workspace
rm(list = ls())
# Load data
pacman::p_load(tidyverse, dplyr, chron, ggplot2)
# Data on genotrophic cycle rates  primarily taken from Beck-Johnson et al, and Lardeux et al, 2008
temp <- c(15, 20, 23, 25, 27, 29, 31, 33, 35)
genotrophic.cycle <- c(0.0781, 0.1563, 0.1961, 0.2857, 0.3030, 0.3704, 0.4762, 0.4167, 0.4348)
# Put it in a dataframe
df <- data.frame(temp=temp, gen.cycle=genotrophic.cycle)
View(df)
#visualize data with base plot function
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
temp <- df$temp
gen.func <- function(a, alpha, beta){
alpha*exp(-((temp-beta)^2)/a)
}
model1 <- nls(df$gen.cycle ~ gen.func(a, alpha, beta), data = df, start = list(a = 100, beta = 31, alpha=0.46))
summary(model1)
coef(model1)
phi <-  0.443111*exp(-((temp - 34.388928)^2)/185.611105) # Exponential function for genotrophic cycle
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, ylim = c(0, 0.5))
lines(df$temp, phi, col = "red")
# Fit power function to data same data
power <- function(alpha, beta) {alpha*temp^beta }
model2 <- nls(df$gen.cycle ~ power(alpha, beta), data = df, start = list(alpha = 0.001, beta = 1.7))
summary(model2)
coef(model2)
phi2 <- 0.0007419766*temp^1.8246405203 # Power function for genotrophic cycle
# Plot
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
lines(df$temp, phi2, "l")
# Estimating the parameters with MLE of the function alpha*exp(-(temp-beta1)^2/beta2)
temp <- df$temp
LL <- function(alpha, beta1, beta2, mu, sigma) {
R = df$gen.cycle - alpha*exp(-((temp-beta1)^2)/beta2)
#
R = suppressWarnings(dnorm(R, mu, sigma, log = TRUE))
#
-sum(R)
}
library(bbmle)
fit <- mle2(LL, start = list(alpha = 0.3, beta1 = 34, beta2 = 100, mu = 0, sigma = 1))
summary(fit)
AIC(fit)
phi2 <- coef(fit)[1]*exp(-((temp-coef(fit)[2])^2)/coef(fit)[3])
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, , ylim = c(0, 0.5))
lines(df$temp, phi2, "l")
phi2
phi2
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, ylim = c(0, 0.5))
lines(df$temp, phi2, "l")
#Clear workspace
rm(list = ls())
# Load data
pacman::p_load(tidyverse, dplyr, chron, ggplot2)
# Data on genotrophic cycle rates  primarily taken from Beck-Johnson et al, and Lardeux et al, 2008
temp <- c(15, 20, 23, 25, 27, 29, 31, 33, 35)
genotrophic.cycle <- c(0.0781, 0.1563, 0.1961, 0.2857, 0.3030, 0.3704, 0.4762, 0.4167, 0.4348)
# Put it in a dataframe
df <- data.frame(temp=temp, gen.cycle=genotrophic.cycle)
#visualize data with base plot function
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1)
temp <- df$temp
gen.func <- function(a, alpha, beta){
alpha*exp(-((temp-beta)^2)/a)
}
model1 <- nls(df$gen.cycle ~ gen.func(a, alpha, beta), data = df, start = list(a = 100, beta = 31, alpha=0.46))
summary(model1)
coef(model1)
gen.func <- function(alpha, beta1, beta2){
alpha*exp(-((temp-beta1)^2)/beta2)
}
model1 <- nls(df$gen.cycle ~ gen.func(alpha, beta1, beta2), data = df, start = list(alpha=0.46, beta1 = 31, beta2 = 100))
summary(model1)
coef(model1)
phi <-  0.443111*exp(-((temp - 34.388928)^2)/185.611107) # Exponential function for genotrophic cycle
plot(df$temp, df$gen.cycle, pch=16, col="darkblue", cex=1, ylim = c(0, 0.5))
lines(df$temp, phi, col = "red")
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
#
t <- seq(0, 360, by = 0.1)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
rm(list = ls())
#
t <- seq(0, 360, by = 0.1)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
phi_Ao <-  0.443111*exp(-((temp - 34.388928)^2)/185.611107)
plot(temp, phi_Ao)
dev.off()
plot(temp, phi_Ao)
plot(temp, phi_Ao, "l")
summary(phi_Ao)
phi_Ao <- -5.4 + 1.8*temp - 0.2124*temp^2 + 0.01015*temp^3 - 0.0001515*temp^4
rm(list = ls())
#
t <- seq(0, 360, by = 0.1)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
phi_Ao <- -5.4 + 1.8*temp - 0.2124*temp^2 + 0.01015*temp^3 - 0.0001515*temp^4
plot(temp, phi_Ao, "l")
summary(phi_Ao)
df <- data.frame(time=t, temp = temp, oviposition rate = phi_Ao)
df <- data.frame(time=t, temp = temp, oviposition_rate = phi_Ao)
View(df)
phi_Ao <- ifelse(temp <= 15, 0.4200,  -5.4 + 1.8*temp - 0.2124*temp^2 + 0.01015*temp^3 - 0.0001515*temp^4)
plot(temp, phi_Ao, "l")
summary(phi_Ao)
phi_Ao <- ifelse(temp <= 15, 0.3973,  -5.4 + 1.8*temp - 0.2124*temp^2 + 0.01015*temp^3 - 0.0001515*temp^4)
plot(temp, phi_Ao, "l")
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
# we use the outer() function to apply the function ovi at every combination of temp and rain
temp <- seq(0, 40)
R <- seq(0, 60)
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "lightblue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
round(res, 3)
# we use the outer() function to apply the function ovi at every combination of temp and rain
temp <- seq(0, 40)
R <- seq(0, 60)
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "darkblue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
round(res, 3)
# we use the outer() function to apply the function ovi at every combination of temp and rain
temp <- seq(0, 40)
R <- seq(0, 60)
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "blue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
round(res, 3)
# we use the outer() function to apply the function ovi at every combination of temp and rain
temp <- seq(0, 40)
R <- seq(0, 60)
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "lightblue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
round(res, 3)
```{r}
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "lightblue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(t, temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(t, temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(t, temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(t, temp, R, rho_E)
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(t, temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(t, temp, R, rho_E)
# we use the outer() function to apply the function ovi at every combination of temp and rain
t <- seq(0, 365, by=1)
temp <-  temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
rho_E <- function(temp, R){
d_E <- (1.011 + 20.212*(1 + (temp/12.096)^4.839)^-1) # from Okuneye
d_E1 <- 1/d_E
R_IM <- 100
P_ME <- 0.9
d_E <- 1/d_E1
p_E.T <- exp(-d_E1)
p_E.R <- R*(R_IM - R)*(4*P_ME/R_IM^2)
p_E <- p_E.R*p_E.T
(1-p_E)*(p_E^d_E)/(1-(p_E^d_E))
}
z3 <- outer(temp, R, rho_E)
# Finally, plot the 3D surface as follows.
#persp(temp, R, z3)
res <- persp(temp, R, z3,
theta = 30,
phi = 15,
expand = 0.75,
col = "lightblue",
shade = 0.5,
ltheta = 120,
ticktype = "detailed",
xlab = "temp (°C)",
ylab = "rain (cm)",
zlab = "Egg mortality rate",
main="Perspective Plot of Egg mortality rate"
)
library(plotly)
install.packages("plotly")
library(plotly)
# df_sample could be your plot_data
df_sample
library(plotly)
# df_sample could be your plot_data
df_sample <- data.frame(data_col = c(45.62151, 60.30996, 66.01667, 45.48701,
60.39519, 65.42441, 45.48208, 60.39041, 65.52165),
axis_one=c(10000, 10000, 10000, 1000000, 1000000, 1000000, 100000000,
100000000, 100000000),
axis_two=c(1, 100, 10000,1, 100, 10000,1, 100, 10000))
df<-as.matrix(df_sample, rownames.force = NA)
plot_ly(z=~df) %>% add_surface()
library(plotly)
# df_sample could be your plot_data
df_sample <- data.frame(data_col = c(45.62151, 60.30996, 66.01667, 45.48701,
60.39519, 65.42441, 45.48208, 60.39041, 65.52165),
axis_one=c(10000, 10000, 10000, 1000000, 1000000, 1000000, 100000000,
100000000, 100000000),
axis_two=c(1, 100, 10000,1, 100, 10000,1, 100, 10000))
df<-as.matrix(df_sample, rownames.force = NA)
plot_ly(z=~df) %>% add_surface()
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
View(out2)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
View(out2)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
View(out2)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
View(out2)
summary(df$temp)
summary(out2$temp)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
summary(out2$rain )
dev.off()
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
plot(out2$temp, out2$adult.sum)
plot(out2$temp, out2$adult.sum, "l")
source("~/Documents/Github/climate-and-mosquitoes/mosq-pop-prediction-model/mosquito_model.R", echo=TRUE)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
plot(out2$time, out2$adult.sum, "l")
plot(out2$temp, out2$adult.sum, "l")
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
summary(out2$temp)
summary(out2$rain)
plot(out2$time, out2$temp, "l")
out2$time
plot(out2$time, diff(c(0,out2$temp))*(1/.1), "l")
temp <- function(t){16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365)}
temp(6)
out = temp(seq(0,365,.1))
plot(out)
tail(c(1,2,3),-1)
plot(tail(out2$time,-1), diff(out2$temp)*(1/.1), "l")
plot(out2$time, c(out2$temp[1],diff(out2$temp)*(1/.1)), "l")
16.93443 - 4.00834*sin(2*pi*0/365) - 10.50303*cos(2*pi*0/365)
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
plot(out2$time, c(out2$temp[1],diff(out2$temp)*(1/.1)), "l")
plot(out2$time, c(out2$temp[1],diff(out2$temp)*(1/.1)), "l")
# Method 1: Using stack method (Use the Stack Function in Base R)
# creating a data frame
data <- data.frame(col1=c('Yash', 'Yash', 'Mallika',
'Mallika', 'Muskan', 'Muskan'),
semester=c(rep(LETTERS[1:2],3)),
quiz_sst=c(1, 3, 4, 8, 9, 1),
quiz_maths=c(2, 4, 6, 2, 7, 3))
rm(list = ls())
tail(c(1, 2, 3), -1)
head(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
head(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), -1)
head(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 1)
head(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), -2)
head(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), -2)
# Method 1: Using stack method (Use the Stack Function in Base R)
# creating a data frame
data <- data.frame(col1=c('Yash', 'Yash', 'Mallika',
'Mallika', 'Muskan', 'Muskan'),
semester=c(rep(LETTERS[1:2],3)),
quiz_sst=c(1, 3, 4, 8, 9, 1),
quiz_maths=c(2, 4, 6, 2, 7, 3))
# binding the first two columns as it is
# and stacking the third and fourth columns
data_mod <- cbind(data[1:2], stack(data[3:4]))
print(data_mod)
# Method 1: Using stack method (Use the Stack Function in Base R)
# creating a data frame
data <- data.frame(col1=c('Yash', 'Yash', 'Mallika',
'Mallika', 'Muskan', 'Muskan'),
semester=c(rep(LETTERS[1:2],3)),
quiz_sst=c(1, 3, 4, 8, 9, 1),
quiz_maths=c(2, 4, 6, 2, 7, 3))
data
# binding the first two columns as it is
# and stacking the third and fourth columns
data_mod <- cbind(data[1:2], stack(data[3:4]))
plot(out2$time, c(out2$temp[1],diff(out2$temp)*(1/.1)), "l")
source("~/Documents/Github/model-chapter1/model_temp&rain_plot.R", echo=TRUE)
plot(out2$time, c(out2$temp[1],diff(out2$temp)*(1/.1)), "l")
plot(c(out2$temp[1],diff(out2$temp)*(1/.1)), out2$adult.sum, "l")
plot(out2$time, c(out2$rain[1], diff(out2$temp)*1/.1), "l")
plot(out2$time, c(out2$rain[1], diff(out2$rain)*1/.1), "l")
